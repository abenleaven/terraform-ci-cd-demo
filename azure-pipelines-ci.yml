# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Date:yyyyMMdd)$(Rev:.r)
trigger: [master]
pr: none

variables:
- name: TF_WORKSPACE
  value: default

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DownloadSecureFile@1
  displayName: Download Azure Subscription Connection Details
  inputs:
    secureFile: 'azure.tfvars'
- task: DownloadSecureFile@1
  displayName: Download Azure Backend Connection Details
  inputs:
    secureFile: 'backend.tfvars'
- task: TerraformInstaller@0
  displayName: Install Terraform
  inputs:
    terraformVersion: '0.12.3'
- task: CmdLine@2
  displayName: Initialize Terraform
  inputs:
    script: 'terraform init -get=true -upgrade=true -backend-config=$(Agent.TempDirectory)/backend.tfvars -backend-config=key=$(STATE_FILE)'
    workingDirectory: '$(Build.SourcesDirectory)'
- task: CmdLine@2
  displayName: Validate Terraform Code
  inputs:
    script: 'terraform validate'
    workingDirectory: '$(Build.SourcesDirectory)'
- task: CmdLine@2
  displayName: Test Terraform Code (Plan)
  inputs:
    script: 'terraform plan -lock=true -var-file=$(Agent.TempDirectory)/azure.tfvars -out=$(Build.BuildId)-$(TF_WORKSPACE).plan'
    workingDirectory: '$(Build.SourcesDirectory)'
- task: CopyFiles@2
  displayName: Prepare Artifacts
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**/*'
    TargetFolder: '$(Build.StagingDirectory)'
- task: PublishPipelineArtifact@1
  displayName: Publish Artifacts
  inputs:
    targetPath: '$(Build.StagingDirectory)'
    artifact: '$(Build.BuildId)-$(TF_WORKSPACE)'