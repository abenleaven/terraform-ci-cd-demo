# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Date:yyyyMMdd)$(Rev:.r)
pr: none

variables:
- name: TF_WORKSPACE
  value: default
- name: TF_VAR_client_id
  value: $(ARM_CLIENT_ID)
- name: TF_VAR_client_secret
  value: $(ARM_CLIENT_SECRET)
- name: TF_VAR_subcription_id
  value: $(ARM_SUBSCRIPTION_ID)
- name: TF_VAR_tenant_id
  value: $(ARM_TENANT_ID)
- group: terraform-azure-backend
- group: terraform-azure-creds

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: CmdLine@2
  displayName: Env
  inputs:
    script: 'env'
    workingDirectory: '$(Build.SourcesDirectory)'
- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.12.3'
- task: CmdLine@2
  displayName: Initialize Terraform
  inputs:
    script: 'terraform init -get=true -upgrade=true -backend-config="storage_account_name=$(STORAGE_ACCOUNT)" -backend-config="access_key=$(ACCESS_KEY)" -backend-config="container_name=$(BLOB)" -backend-config="key=$(STATE_FILE)"'
    workingDirectory: '$(Build.SourcesDirectory)'
- task: CmdLine@2
  displayName: Validate Terraform Code
  inputs:
    script: 'terraform validate'
    workingDirectory: '$(Build.SourcesDirectory)'
- task: CmdLine@2
  displayName: Test Terraform Code (Plan)
  inputs:
    script: 'terraform plan -out=$(TF_WORKSPACE)-$(Build.BuildId).plan'
    workingDirectory: '$(Build.SourcesDirectory)'
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**\*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: '$(TF_WORKSPACE)'