# Terraform CI Pipeline

name: $(Date:yyyyMMdd)$(Rev:.r)-$(Build.BuildId)

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - azure-pipelines.yml

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: AzureKeyVault@1
  displayName: 'Download Key Vault Secrets'
  inputs:
    azureSubscription: 'Azure MSDN'
    KeyVaultName: 'DevOps-Terraform-KV'
- task: TerraformInstaller@0
  displayName: 'Install Terraform version $(TF-Version)'
  inputs:
    terraformVersion: '$(TF-Version)'
- template: templates/terraform.yml
  parameters:
    saName: '$(sa-name)'
    blobName: '$(blob-name)'
    saKey: '$(sa-key)'
    stateKey: '$(key)'
    workspace: '$(TF-Workspace)'
    subscriptionId: '$(subscription-id)'
    clientId: '$(client-id)'
    clientSecret: '$(client-secret)'
    tenantId: '$(tenant-id)'
- script: echo "Deleting all $TF-Workspace workspace related files"; rm -rf .terraform; rm -f $(TF-Workspace).plan
  workingDirectory: '$(Build.SourcesDirectory)'
  displayName: 'Delete $(TF-Workspace) environment related files'
- template: templates/terraform.yml
  parameters:
    saName: '$(sa-name)'
    blobName: '$(blob-name)'
    saKey: '$(sa-key)'
    stateKey: '$(key)'
    workspace: 'test'
    subscriptionId: '$(subscription-id)'
    clientId: '$(client-id)'
    clientSecret: '$(client-secret)'
    tenantId: '$(tenant-id)'