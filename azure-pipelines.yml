# Terraform CI Pipeline

name: $(Date:yyyyMMdd)$(Rev:.r)
trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - azure-pipelines.yml

pool:
  vmImage: 'ubuntu-latest'

steps:
# - task: DownloadSecureFile@1
#   displayName: Download Azure Backend Connection Details
#   inputs:
#     secureFile: 'backend.tfvars'
# - task: DownloadSecureFile@1
#   displayName: Download Azure Backend Connection Details
#   inputs:
#     secureFile: 'azure-creds.tfvars'
- task: AzureKeyVault@1
  displayName: 'Download KV Secrets'
  inputs:
    azureSubscription: 'Azure MSDN'
    KeyVaultName: 'DevOps-Terraform-KV'
- task: TerraformInstaller@0
  displayName: 'Install Terraform version $(TF-Version)'
  inputs:
    terraformVersion: '$(TF-Version)'
- script: terraform init -get=true -upgrade=true -backend-config='storage_account_name=$(sa-name)' -backend-config='container_name=$(blob-name)' -backend-config='access_key=$(sa-key)' -backend-config='key=$(key)'
  workingDirectory: '$(Build.SourcesDirectory)'
  displayName: 'Terraform Init'
#- script: terraform workspace select $(TF-Workspace) || terraform workspace new $(TF-Workspace)
#  workingDirectory: '$(Build.SourcesDirectory)'
#  displayName: 'Terraform workspace'
#- script: 'terraform validate'
#  workingDirectory: '$(Build.SourcesDirectory)'
#  displayName: 'Terraform Validate'
#- script: 'terraform plan -lock=true -var-file=$(Agent.TempDirectory)/azure-creds.tfvars -out=$(Build.BuildId)-$(TF-Workspace).plan'
#  displayName: 'Terraform Plan'
#  workingDirectory: '$(Build.SourcesDirectory)'
#- task: CopyFiles@2
#  displayName: Prepare Artifacts
#  inputs:
#    SourceFolder: '$(Build.SourcesDirectory)'
#    Contents: '**/*'
#    TargetFolder: '$(Build.StagingDirectory)'
#- task: PublishPipelineArtifact@1
#  displayName: Publish Artifacts
#  inputs:
#    targetPath: '$(Build.StagingDirectory)'
#    artifact: '$(Build.BuildId)-$(TF-Workspace)'